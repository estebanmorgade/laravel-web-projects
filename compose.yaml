# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  app:
    image: 851725308049.dkr.ecr.us-east-1.amazonaws.com/docker/laravel_images:latest
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - ./:/var/www
    expose:
      - "9000"
    depends_on:
      - db
    # If your application exposes a port, uncomment the following lines and change
    # the port numbers as needed. The first number is the host port and the second
    # is the port inside the container.
    # ports:
    #   - 8080:8080

    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker compose up`.
    #     depends_on:
    #       db:
    #         condition: service_healthy
    #   db:
    #     image: postgres
    #     restart: always
    #     user: postgres
    #     secrets:
    #       - db-password
    #     volumes:
    #       - db-data:/var/lib/postgresql/data
    #     environment:
    #       - POSTGRES_DB=example
    #       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    #     expose:
    #       - 5432
    #     healthcheck:
    #       test: [ "CMD", "pg_isready" ]
    #       interval: 10s
    #       timeout: 5s
    #       retries: 5
    # volumes:
    #   db-data:
    # secrets:
    #   db-password:
    #     file: db/password.txt

  db:
      image: postgres:latest
      container_name: postgres_db
      restart: unless-stopped
      environment:
        POSTGRES_DB: laravel
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 12345678
      volumes:
        - pgdata:/var/lib/postgresql/data
      ports:
        - "5432:5432"

  nginx:
      image: nginx:stable-alpine3.21-perl
      container_name: nginx_server
      restart: unless-stopped
      ports:
        - "8080:80"
      volumes:
        - ./:/var/www
        - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      depends_on:
        - app

volumes:
  pgdata: